//purpose: to test employee system

package employeeSystem; 

import java.io.File;
import java.io.FileNotFoundException
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.InputMismatchException
import java.util.Scanner; 

/**class to test Employees*/
public class EmployeeSystem {

    /**tests Employees
     * 
     * @param args not used
     */
    public static void main(String[] args) throws IOException {
        String type;
        ArrayList<Employee> listOfEmployees = newArrayList<>();
        try {
            Scanner scan = new Scanner(new File("employees.dat"));
            PrintWriter writer = new PrintWriter(new File("TextOutPut.txt"));
            ObjectOutputStream objectOutput = new ObjectOutputStream(new FileOutputStream(new File("SavedEmployees.dat")));
                while (scan.hasNext()) {
                    type = scan.next();
                    type = type.toUpperCase();
                    switch (type) {
                    case "S": 
                        listOfEmployees.add(new SalariedEmployee(scan.next(), scan.next(), scan.next(), scan.nextDouble())); 
                        break; 
                    case "C": 
                        listOfEmployees.add(new CommissionedEmployee(scan.next(), scan.next(), scan.next(), scan.nextDouble())); 
                        break; 
                    case "H": 
                        listOfEmployees.add(new HourlyEm,ployee(scan.next(), scan.next(), scan.next(), scan.nextDouble())); 
                        break; 
                    default: 
                        System.out.println("Employee type is not valid");
                        break;
                    }//end switch
                }//end while(read file)
        
                objectOutput.writeObject(listOfEmployees);
                objectOutput.close();
                
                Scanner scn = new Scanner(System.in);
                double input; 
        
                for (Employee current: listOfEmployees) {
                    if (current instanceof HourlyEmployee) {
                        System.out.print("Please enter the number of hours "+current.getFirstName()+" "+current.getLastName()+" worked this month: "; 
                        try {
                            input = scn.nextDouble();
                        }//end try
                        catch (InputMismatchException e) {
                            System.out.println("Invalid input for number of hours. Setting hours to 0"); 
                            scn.nextLine(); 
                            input = 0;
                        }//end input mismatch catch 1
                        ((HourlyEmployee) current).setHours(input);
                    }//end if
                    
                    else if (current instanceof CommissionedEmployee) {
                        System.out.print("Please enter the sales for "+current.getFirstName()+" "+current.getLastName()+" worked this month: ");
                        try {
                            input = scn.nextDouble(); 
                        }//end try
                        catch (InputMismatchException e) {
                            System.out.println("Invalid input for number of sales. Setting sales to 0"); 
                                scn.nextLine();
                                input = 0;
                        }//end input mismatch catch 2
                        
                ((CommissionedEmployee)current).setGrossSales(input)(; 
                    }//end if
            }//end for
        
            System.out.println("Monthly Payroll: ");
            for (Employee current: listOfEmployees) {
                System.out.println(current+"\nEarnings: "+Employee.MONEY.format(current.earnings()));
                System.out.println(current.processPayment(current.earnings())+"\n");
                writer.println(current+"\nEarnings: "+Employee.MONEY.format(current.earnings()));
                writer.println(current.processPayment(current.earnings())+"\n");
            }//end for
            
            writer.close();
            scn.close();
            scan.close();
        }//end try
        
    }//end main
    
}//end EmployeeSystem class
                
